// new game
$login : url('../../oxImg/login.png'); // 登录页背景
$home : url('../../oxImg/home.jpg'); // 主页背景
$wx_login : url('../../oxImg/wx_login.png'); // 微信登录
$home05 : url('../../oxImg/home05.png'); // 头像背景圈圈
$gb : url('../../oxImg/gb.png'); // 广播
$daili : url('../../oxImg/daili.png'); // 绑定代理背景 imsg
$daili02 : url('../../oxImg/daili02.png'); // 绑定代理确定
$home06 : url('../../oxImg/home06.png'); // 广播bj
$off : url('../../oxImg/off.png'); // off
$chang : url('../../oxImg/chang.png'); // chang
$idmes : url('../../oxImg/idMessage2.png'); // 头像背景
// 房间
$room : url('../../oxImg/room.jpg'); // 广播bj
$sz : url('../../oxImg/sz.png');    // 申请上庄
$xz : url('../../oxImg/room004.png');    // 取消上庄
$cmbj : url('../../oxImg/cmbj.png');    // 筹码背景
$back : url('../../oxImg/back.png');    // 返回箭头《
$liBack : url('../../oxImg/liBack.png');    // li背景
$rule02 : url('../../oxImg/rule02.png');    // 规则框框
$buyzs : url('../../oxImg/buyzs.png');    // 购买背景
$zs02 : url('../../oxImg/zs02.png');    // 购买背景li
$buy : url('../../oxImg/buy.png');    // 购买
$open : url('../../oxImg/open.png');    // open奖
$room008: url('../../oxImg/room008.png'); // 空位
$room031: url('../../oxImg/room031.png'); // 庄背景
$room_left03: url('../../oxImg/room_left03.png'); // 文字阴影
// 未节省精灵图
$homeAll: url('../../oxImg/home_all.png');
$roomAll: url('../../oxImg/room_all.png');
// 旧
$zhifu: url('../../oxImg/zhifu.png');   // 购买房卡-支付
$careTip01: url('../../oxImg/careTip01.png');   // 购买选择-x


// flex兼容处理器mixin 
@mixin kabai() {    // 扑克摆位 
    
    img:nth-of-type(2){
        left: 0.62963rem;
        // z-index: 3;
    }
    img:nth-of-type(3){
        left: 1.037037rem;
        // z-index: 4;
    }
    img:nth-of-type(4){
        left: 1.435185rem;
        // z-index: 5;
    }
    img:nth-of-type(5){
        left: 1.833333rem;
        // z-index: 6;
    }    

}


@mixin flexbox() {  // display: flex;
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
}

// @include box-sizing();
@mixin box-sizing() {       // box-sizing
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    -ms-box-sizing: border-box;
    -o-box-sizing: border-box;
    box-sizing: border-box;
}

// @include direction(val);
@mixin direction($val) {  // flex-direction: column;
    @if ($val==row) {
        -webkit-box-orient: horizontal;
        -moz-box-orient: horizontal;
        box-orient: horizontal;
        -webkit-box-direction: normal;
        -moz-box-direction: normal;
        box-direction: normal;
    }
    @if ($val==row-reverse) {
        -webkit-box-orient: horizontal;
        -moz-box-orient: horizontal;
        box-orient: horizontal;
        -webkit-box-direction: reverse;
        -moz-box-direction: reverse;
        box-direction: reverse;
    }
    @if ($val==column) {
        -webkit-box-orient: vertical;
        -moz-box-orient: vertical;
        box-orient: vertical;
        -webkit-box-direction: normal;
        -moz-box-direction: normal;
        box-direction: normal;
    }
    @if ($val==column-reverse) {
        -webkit-box-orient: vertical;
        -moz-box-orient: vertical;
        box-orient: vertical;
        -webkit-box-direction: reverse;
        -moz-box-direction: reverse;
        box-direction: reverse;
    }
    -webkit-flex-direction: $val;
    flex-direction: $val;
}

// @include justify-content($val);
@mixin justify-content($val) {
    @if ($val == flex-start) {
        -webkit-box-pack: start;
        -moz-box-pack: start;
        box-pack: start;
    }
    @if ($val == flex-end) {
        -webkit-box-pack: end;
        -moz-box-pack: end;
        box-pack: end;
    }
    @if ($val == center) {
        -webkit-box-pack: center;
        -moz-box-pack: center;
        box-pack: center;
    }
    @if ($val == space-between) {
        -webkit-box-pack: justify;
        -moz-box-pack: justify;
        box-pack: justify;
    }
    -webkit-justify-content: $val; 
    justify-content: $val; 
}

// @include flex-wrap();
@mixin flex-wrap($wrap) {
    @if ($wrap==nowrap) {
        -webkit-box-lines: single;
        -moz-box-lines: single;
        box-lines: single;
    }
    @if ($wrap==wrap) {
        -webkit-box-lines: multiple;
        -moz-box-lines: multiple;
        box-lines: multiple;
    }
    -webkit-flex-wrap: $wrap;
    -ms-flex-wrap: $wrap;
    flex-wrap: $wrap;
}

// @include align-itwms();
@mixin align-itwms($align-items) {
    @if ($align-items == flex-start) {
        -webkit-box-align: start;
        -moz-box-align: start;
        box-align: start;
    }
    @if ($align-items == flex-end) {
        -webkit-box-align: end;
        -moz-box-align: end;
        box-align: end;
    }
    @if ($align-items == center) {
        -webkit-box-align: center;
        -moz-box-align: center;
        box-align: center;
    }
    @if ($align-items == baseline) {
        -webkit-box-align: baseline;
        -moz-box-align: baseline;
        box-align: baseline;
    }
    @if ($align-items == stretch) {
        -webkit-box-align: stretch;
        -moz-box-align: stretch;
        box-align: stretch;
    }
    -webkit-align-items: $align-items;
    align-items: $align-items;
}

// @include flex();
@mixin flex($values) {
    -webkit-box-flex: $values;
    -moz-box-flex:  $values;
    -ms-box-flex:  $values;
    -o-box-flex:  $values;
    -webkit-flex: $values;
    -moz-flex: $values;
    -ms-flex: $values;
    -o-flex: $values;
    box-flex:  $values;
    flex: $values;
}

// @include order();
@mixin order($val) {
    -webkit-box-ordinal-group: $val;  
    -moz-box-ordinal-group: $val;     
    -ms-flex-order: $val;     
    -webkit-order: $val;  
    order: $val;
}

// @include translate(x,y);
@mixin translate($x,$y) {   // transform: translate(-50%, 28%);
    -webkit-transform: translate($x,$y);
       -moz-transform: translate($x,$y);
        -ms-transform: translate($x,$y);
         -o-transform: translate($x,$y);
            transform: translate($x,$y);
}

// @include transition(all,s);
@mixin transition($ele,$s){     // transition: all 1s;
    -webkit-transition: $ele $s;
       -moz-transition: $ele $s;
        -ms-transition: $ele $s;
         -o-transition: $ele $s;
            transition: $ele $s;
}

// @include animation($name,$s,$lin,$inf,$ali)
@mixin animation($name,$s,$lin,$inf,$ali) {    // animation
    -webkit-animation: $name $s $lin $inf $ali;
       -moz-animation: $name $s $lin $inf $ali;
        -ms-animation: $name $s $lin $inf $ali;
         -o-animation: $name $s $lin $inf $ali;
            animation: $name $s $lin $inf $ali;
}

// @include border-radius(xx);
@mixin border-radius($px) {
    -webkit-border-radius: $px;
       -moz-border-radius: $px;
        -ms-border-radius: $px;
         -o-border-radius: $px;
            border-radius: $px;
}

// @include transformRanT()
@mixin transformRanT($x,$y,$deg){
    -webkit-transform: translate($x, $y) rotateY($deg);
    -moz-transform: translate($x, $y) rotateY($deg);
    -ms-transform: translate($x, $y) rotateY($deg);
    -o-transform: translate($x, $y) rotateY($deg);
    transform: translate($x, $y) rotateY($deg);
}

// @include imgxx7();
@mixin imgxx7($item) {
    right: #{5.56-$item}rem;
}

@mixin imgxx5($item) {
    right: #{5.3-$item}rem;
}
